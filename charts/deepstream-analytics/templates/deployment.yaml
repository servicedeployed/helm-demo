apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deepstream-analytics.fullname" . }}
  labels:
{{ include "deepstream-analytics.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "deepstream-analytics.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "deepstream-analytics.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: "{{ .Chart.Name }}-1"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
          - sh
          - -c
          {{- if .Values.ngcModel }}
          - apt update;
            echo "Path is - " $PATH;
            echo "ld library path is - " $LD_LIBRARY_PATH;
            echo "GST plugin path is - " $GST_PLUGIN_PATH;
            apt install wget unzip -y; 
            {{ .Values.ngcModel.getModel }}; 
            unzip *.zip; 
            cp -r {{ .Values.ngcModel.fileName }} {{ .Values.ngcModel.putModel }}; 
            sed -ie "s/..\/..\/models\/tlt_pretrained_models\/{{ .Values.ngcModel.name}}\/{{ .Values.ngcModel.fileName }}/\/opt\/nvidia\/deepstream\/deepstream-5.0\/samples\/configs\/tlt_pretrained_models\/{{ .Values.ngcModel.fileName }}/g" {{ .Values.ngcModel.modelConfig }}; 
            {{ .Values.command.apprunnercmd}} {{ .Values.command.apprunnername}} {{ .Values.command.appname}} {{ .Values.command.apparg}}
          {{- else }}
          - {{ .Values.command.apprunnercmd}} {{ .Values.command.apprunnername}} {{ .Values.command.appname}} {{ .Values.command.apparg}}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # Env entry below added by InnovoEdge
          env:
            - name: "LD_LIBRARY_PATH"
              value: "/usr/local/nvidia:/usr/local/nvidia/bin:/usr/local/nvidia/lib64"
          ports: 
            - name: http
              containerPort: 8554
              protocol: TCP
            - name: http1
              containerPort: {{ .Values.service.webuiPort }}
              protocol: TCP
          volumeMounts:
            - name: ipmount
              mountPath: /etc/config
            - name: create-config
              mountPath: /opt/nvidia/deepstream/create_config.py
              subPath: create_config.py
      volumes:
        - name: ipmount
          configMap:
            name: {{ include "deepstream-analytics.fullname" . }}-configmap
        - name: create-config
          configMap:
            name: {{ include "deepstream-analytics.fullname" . }}-create-config
{{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deepstream-analytics.fullname" . }}-webui
  labels:
    name: {{ include "deepstream-analytics.fullname" . }}-webui      
{{ include "deepstream-analytics.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ include "deepstream-analytics.fullname" . }}-webui
      app.kubernetes.io/name: {{ include "deepstream-analytics.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: {{ include "deepstream-analytics.fullname" . }}-webui
        app.kubernetes.io/name: {{ include "deepstream-analytics.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: "{{ .Chart.Name }}-webui-1"
          image: {{ .Values.image.webui }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DS_PORT
            value: "{{ .Values.service.nodePort }}"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "sleep 45; bash /tmp/serverstart.sh; cp -r /tmp/play.html /usr/local/antmedia/webapps/WebRTCApp/play.html"]
          resources: {}
          volumeMounts:
          - mountPath: /tmp/play.html
            name: play
            subPath: play.html
          ports:
            - name: http
              containerPort: {{ .Values.service.webuiPort }}
              protocol: TCP
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ include "deepstream-analytics.fullname" . }}-webui-configmap
        name: play

