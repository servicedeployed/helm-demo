# Default values for deepstream-analytics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nvcr.io/nvidia/deepstream
  tag: 5.0-20.07-samples
  pullPolicy: Always
  #webui: anguda/ant-media:1.0
  webui: innovoedge/ant-media:latest

imagePullSecrets:
- name: nvidia-registrykey-secret
nameOverride: ""
fullnameOverride: ""

# Update the NGC Model to use in Deepstream 
ngcModel:
  #NGC Model Pruned URL from NGC
  getModel: wget --content-disposition https://api.ngc.nvidia.com/v2/models/nvidia/tlt_trafficcamnet/versions/pruned_v1.0/zip -O tlt_trafficcamnet_pruned_v1.0.zip
  #NGC model name
  name: trafficcamnet
  # Model File Name that will use in Deepstream
  fileName: resnet18_trafficcamnet_pruned.etlt
  # Model Config that needs to update
  modelConfig: /opt/nvidia/deepstream/deepstream-5.0/samples/configs/tlt_pretrained_models/config_infer_primary_trafficcamnet.txt
  #Do not update the Put Model
  putModel: /opt/nvidia/deepstream/deepstream-5.0/samples/configs/tlt_pretrained_models/

command:
  apprunnercmd: "python"
  apprunnername: "/opt/nvidia/deepstream/create_config.py"
  appname: "deepstream-app"
  apparg: "/opt/nvidia/deepstream/deepstream-5.0/samples/configs/deepstream-app/source4_1080p_dec_infer-resnet_tracker_sgie_tiled_display_int8.txt"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: NodePort
  port: 80
  nodePort: 31113
  webuiPort: 5080
  webuinodePort: 31115

ingress:
  annotations:
    kubernetes.io/ingress.class: nginx
  enabled: false
  hostname: deepsteam.local

#specify camera IP as rtsp://username:password@ip
#or rtsp://ip if it has no username and password
cameras:
  # camera1: rtsp://159.89.250.12:8554/my-test-stream

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  limits:
    nvidia.com/gpu: 1

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

